@model DashboardViewModel
@using TechNationTeste.Models;

@{
    ViewData["Title"] = "Dashboard";
    int? mesEmissao = ViewData["mesEmissao"] as int?;
    int? mesCobranca = ViewData["mesCobranca"] as int?;
    int? mesPagamento = ViewData["mesPagamento"] as int?;
    string status = ViewData["status"] as string;
    string periodo = ViewData["periodo"] as string;
}


<div class="container-fluid">
    <div class="row">
        <nav class="col-md-2 sidebar">
            <div class="sidebar-header">
                <a href="#" class="navbar-brand">
                    TechNation
                </a>
            </div>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link active" asp-action="Index">
                        <i class="bi bi-house-fill"></i>
                        Dashboard
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-action="Sobre">
                        <i class="bi bi-info-circle-fill"></i>
                        Sobre
                    </a>
                </li>
            </ul>
        </nav>

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Dashboard</h1>
                <div class="user-profile ml-auto">
                    <img src="~/imagens/admin.png" alt="Sua Foto" class="rounded-circle" width="40" height="40"> <span class="ml-2">Admin</span>
                </div>
            </div>

            <form asp-action="Index" method="get" class="caixa-filtro">
                <div class="form-group mb-2 mr-sm-2">
                    <label for="mesEmissao" class="mr-2">Mês de Emissão:</label>
                    <select id="mesEmissao" name="mesEmissao" class="form-control">
                        <option value="">Todos</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i" selected="@(mesEmissao == i)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="periodo">Período:</label>
                    <select id="periodo" name="periodo" class="form-control">
                        <option value="mes" selected="@(periodo == "mes")">Mês</option>
                        <option value="trimestre" selected="@(periodo == "trimestre")">Trimestre</option>
                        <option value="ano" selected="@(periodo == "ano")">Ano</option>
                    </select>
                </div>

                <div class="form-group mb-2 mr-sm-2">
                    <label for="mesCobranca" class="mr-2">Mês de Cobrança:</label>
                    <select id="mesCobranca" name="mesCobranca" class="form-control">
                        <option value="">Todos</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i" selected="@(mesCobranca == i)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                        }
                    </select>
                </div>
                <div class="form-group mb-2 mr-sm-2">
                    <label for="mesPagamento" class="mr-2">Mês de Pagamento:</label>
                    <select id="mesPagamento" name="mesPagamento" class="form-control">
                        <option value="">Todos</option>
                        @for (int i = 1; i <= 12; i++)
                        {
                            <option value="@i" selected="@(mesPagamento == i)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                        }
                    </select>
                </div>
                <div class="form-group mb-2 mr-sm-2">
                    <label for="status" class="mr-2">Status:</label>
                    <select id="status" name="status" class="form-control">
                        <option value="">Todos</option>
                        <option value="Emitida" selected="@(status == "Emitida")">Emitida</option>
                        <option value="Cobranca realizada" selected="@(status == "Cobranca realizada")">Cobrança realizada</option>
                        <option value="Pagamento em atraso" selected="@(status == "Pagamento em atraso")">Pagamento em atraso</option>
                        <option value="Pagamento realizado" selected="@(status == "Pagamento realizado")">Pagamento realizado</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary mb-2">Filtrar</button>
            </form>



            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Dashboard</h1>
                @* ... (botões e filtros - mantenha como está) *@
            </div>

            <div class="row">
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Emitido</h5>
                            <p class="card-text">@Model.TotalEmitido.ToString("C")</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Inadimplente</h5>
                            <p class="card-text">@Model.TotalInadimplente.ToString("C")</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">% Inadimplência</h5>
                            <p class="card-text">@Model.PercentualInadimplencia.ToString("F1")%</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Evolução da Inadimplência Mensal</h5>
                            <canvas id="graficoInadimplencia"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Evolução da Receita Mensal</h5>
                            <canvas id="graficoReceita"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <h2>Dados das Notas</h2>
            <table class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>N° NF</th>
                        <th>Nome</th>
                        <th>Emissão NF</th>
                        <th>Dt. Cobrança</th>
                        <th>Dt. Pagamento</th>
                        <th>Documento NF</th>
                        <th>Boleto</th>
                        <th>Valor</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var notaFiscal in Model.NotasFiscais)
                    {
                        <tr>
                            <td>@notaFiscal.NumeroIdentificacao</td>
                            <td>@notaFiscal.NomePagador</td>
                            <td>@notaFiscal.DataEmissao.ToString("dd/MM/yyyy")</td>
                            <td>@notaFiscal.DataCobranca?.ToString("dd/MM/yyyy")</td>
                            <td>@notaFiscal.DataPagamento?.ToString("dd/MM/yyyy")</td>
                            <td><a href="@notaFiscal.DocumentoNotaFiscal" target="_blank">@notaFiscal.DocumentoNotaFiscal</a></td>
                            <td><a href="@notaFiscal.DocumentoBoleto" target="_blank">@notaFiscal.DocumentoBoleto</a></td>
                            <td>@notaFiscal.Valor.ToString("C")</td>
                            <td>@notaFiscal.Status</td>
                        </tr>
                    }
                </tbody>
            </table>

        </main>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctxInadimplencia = document.getElementById('graficoInadimplencia').getContext('2d');
    var chartInadimplencia = new Chart(ctxInadimplencia, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Grafico.Periodo)),
            datasets: [{
                label: 'Inadimplência',
                data: @Html.Raw(Json.Serialize(Model.Grafico.Inadimplencia)),
                backgroundColor: 'rgba(220, 53, 69, 0.2)', // Cor de fundo (vermelho claro)
                borderColor: '#dc3545', // Cor da linha (vermelho)
                borderWidth: 1,
                fill: true
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value, index, values) {
                            return 'R$ ' + value.toLocaleString();
                        }
                    }
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            var label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += 'R$ ' + context.parsed.y.toLocaleString();
                            return label;
                        }
                    }
                }
            }
        }
    });
    // Gráfico de Receita (repita a mesma lógica, mas usando Model.Grafico.Receita)


    var ctxReceita = document.getElementById('graficoReceita').getContext('2d');
    var chartReceita = new Chart(ctxReceita, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.Grafico.Periodo)),
            datasets: [{
                label: 'Receita',
                data: @Html.Raw(Json.Serialize(Model.Grafico.Receita)),
                backgroundColor: 'rgba(13, 110, 253, 0.2)', // Cor de fundo (azul claro)
                borderColor: '#0d6efd', // Cor da linha (azul)
                borderWidth: 1,
                fill: true
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value, index, values) {
                            return 'R$ ' + value.toLocaleString(); // Formatar valores como moeda
                        }
                    }
                }
            },
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            var label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            label += 'R$ ' + context.parsed.y.toLocaleString(); // Formatar valores como moeda
                            return label;
                        }
                    }
                }
            }
        }
    });
</script>
